{"version":3,"sources":["../../../src/link.tsx","components/Navbar.jsx","../../../src/flex.tsx"],"names":["Link","forwardRef","styles","useStyleConfig","omitThemingProps","isExternal","target","rel","ref","className","cx","__css","CustomLink","props","to","link","as","RouterLink","pos","m","style","webkitTextStroke","whiteSpace","_hover","textShadow","transform","transition","fontSize","children","NavBar","PreNavBar","borderSize","padding","wrap","justify","mainpage","Flex","shrink","display","flexDirection","alignItems","justifyContent","flexWrap","flexBasis","flexGrow","flexShrink"],"mappings":"kYAgCO,IAAMA,EAAOC,aAA2B,cAC7C,IAAMC,EAASC,YAAe,OAA9B,GACA,EAA2CC,YAA3C,GAAM,EAAN,EAAM,UAAaC,EAAnB,EAAmBA,WAAnB,E,oIAAA,+BAEA,OACE,gBAAC,IAAD,KACEC,OAAQD,EAAa,cADvB,EAEEE,IAAKF,EAAa,2BAFpB,EAGEG,IAHF,EAIEC,UAAWC,YAAG,cAAeD,IAJ/B,GAMEE,MAAOT,QAKT,EAAJ,IACEF,sB,6BC9CF,SAASY,EAAWC,GAChB,OACI,cAACb,EAAD,CACIc,GAAID,EAAME,KACVC,GAAIC,IACJC,IAAI,UACJC,EAAE,gBACFC,MAAO,CAACC,iBAAkB,yCAA0CC,WAAY,UAChFC,OAAQ,CACJC,WAAY,wBACZC,UAAW,cAEfC,WAAW,+CACXC,SAAS,MAXb,SAYKd,EAAMe,WAkCJC,UA7Bf,YAA+B,IACrBC,EAAY,SAACjB,GAAD,OACd,eAAC,IAAD,CACIG,GAAG,MACHE,IAAI,SACJa,WAAY,EACZC,QAAS,EACTC,KAAK,OACLC,QAAQ,SANZ,UAQKrB,EAAMe,SACP,cAAChB,EAAD,CAAYG,KAAK,SAAjB,wBACA,cAACH,EAAD,CAAYG,KAAK,WAAjB,wBACA,cAACH,EAAD,CAAYG,KAAK,WAAjB,4BAIR,OAjB0B,EAAZoB,SAmBN,cAACL,EAAD,UACI,cAAClB,EAAD,CAAYG,KAAK,IAAjB,sBAKD,cAACe,EAAD,M,oTCgBR,IAAMM,EAAOnC,aAA6B,cAAgB,IACzD,EAAN,EAAM,YAAN,EAAM,QAAN,EAAM,UAAN,EAAM,OAAN,EAAM,QAAN,EAAM,KAOJoC,EAPF,EAOEA,OAPF,E,oIAAA,mEAWMnC,EAAS,CACboC,QADa,OAEbC,cAFa,EAGbC,WAHa,EAIbC,eAJa,EAKbC,SALa,EAMbC,UANa,EAObC,SAPa,EAQbC,WAAYR,GAGd,OAAO,gBAAC,IAAD,OAAY7B,IAAZ,EAAsBG,MAAOT,GAApC,OAGE,EAAJ,IACEkC","file":"static/js/1.bde9686e.chunk.js","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface LinkProps extends HTMLChakraProps<\"a\">, ThemingProps<\"Link\"> {\n  /**\n   *  If `true`, the link will open in new tab\n   */\n  isExternal?: boolean\n}\n\n/**\n * Links are accessible elements used primarily for navigation.\n *\n * It integrates well with other routing libraries like\n * React Router, Reach Router and Next.js Link.\n *\n * @example\n *\n * ```jsx\n * <Link as={ReactRouterLink} to=\"/home\">Home</Link>\n * ```\n *\n * @see Docs https://chakra-ui.com/link\n */\nexport const Link = forwardRef<LinkProps, \"a\">((props, ref) => {\n  const styles = useStyleConfig(\"Link\", props)\n  const { className, isExternal, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.a\n      target={isExternal ? \"_blank\" : undefined}\n      rel={isExternal ? \"noopener noreferrer\" : undefined}\n      ref={ref}\n      className={cx(\"chakra-link\", className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nif (__DEV__) {\n  Link.displayName = \"Link\"\n}\n","import { Flex, Link } from \"@chakra-ui/react\"\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nfunction CustomLink(props) {\r\n    return (\r\n        <Link \r\n            to={props.link}\r\n            as={RouterLink}\r\n            pos=\"inherit\"\r\n            m=\"0 10px 0 10px\"\r\n            style={{webkitTextStroke: \"1.5px var(--chakra-colors-palette-900)\", whiteSpace: \"nowrap\"}}\r\n            _hover={{\r\n                textShadow: \"4px 4px 3px lightgray\",\r\n                transform: \"scale(1.1)\"\r\n            }}\r\n            transition=\"text-shadow 0.5s linear, transform 0.4s ease\"\r\n            fontSize=\"2xl\">\r\n            {props.children}\r\n        </Link>\r\n    );\r\n}\r\n\r\nfunction NavBar({ mainpage }) {\r\n    const PreNavBar = (props) => (\r\n        <Flex \r\n            as=\"nav\" \r\n            pos=\"sticky\" \r\n            borderSize={1} \r\n            padding={2} \r\n            wrap=\"wrap\" \r\n            justify=\"center\"\r\n        >\r\n            {props.children}\r\n            <CustomLink link=\"/about\"> About Me </CustomLink>\r\n            <CustomLink link=\"/project\"> Projects </CustomLink>\r\n            <CustomLink link=\"/contact\"> Contacts </CustomLink>\r\n        </Flex>\r\n    );\r\n\r\n    if (mainpage) {\r\n        return (\r\n            <PreNavBar>\r\n                <CustomLink link=\"/\"> Home </CustomLink>\r\n            </PreNavBar>\r\n        );\r\n    }\r\n    else {\r\n        return <PreNavBar />\r\n    }\r\n}\r\n\r\nexport default NavBar;","import {\n  chakra,\n  forwardRef,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface FlexOptions {\n  /**\n   * Shorthand for `alignItems` style prop\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n\n  /**\n   * Shorthand for `justifyContent` style prop\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n\n  /**\n   * Shorthand for `flexWrap` style prop\n   * @type SystemProps[\"flexWrap\"]\n   */\n  wrap?: SystemProps[\"flexWrap\"]\n\n  /**\n   * Shorthand for `flexDirection` style prop\n   * @type SystemProps[\"flexDirection\"]\n   */\n  direction?: SystemProps[\"flexDirection\"]\n\n  /**\n   * Shorthand for `flexBasis` style prop\n   * @type SystemProps[\"flexBasis\"]\n   */\n  basis?: SystemProps[\"flexBasis\"]\n\n  /**\n   * Shorthand for `flexGrow` style prop\n   * @type SystemProps[\"flexGrow\"]\n   */\n  grow?: SystemProps[\"flexGrow\"]\n\n  /**\n   * Shorthand for `flexShrink` style prop\n   * @type SystemProps[\"flexShrink\"]\n   */\n  shrink?: SystemProps[\"flexShrink\"]\n}\n\nexport interface FlexProps extends HTMLChakraProps<\"div\">, FlexOptions {}\n\n/**\n * React component used to create flexbox layouts.\n *\n * It renders a `div` with `display: flex` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/flex\n */\nexport const Flex = forwardRef<FlexProps, \"div\">((props, ref) => {\n  const {\n    direction,\n    align,\n    justify,\n    wrap,\n    basis,\n    grow,\n    shrink,\n    ...rest\n  } = props\n\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nif (__DEV__) {\n  Flex.displayName = \"Flex\"\n}\n"],"sourceRoot":""}